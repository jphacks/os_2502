services:
  server:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: server
    ports:
      - "8080:8080"
    volumes:
      - ./api:/work
    env_file:
      - .env
    command: air
    environment:
      ENV: Development
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
    depends_on:
      - db

  db:
    image: mysql:8.0
    container_name: mysql
    command: "mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --default-time-zone='+9:00'"
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql:/ddl
      - ./docker/mysql/init/all_migrations.sql:/docker-entrypoint-initdb.d/init.sql

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data
    mem_limit: 256m
    mem_reservation: 128m

  image:
    build:
      context: ./storage
      dockerfile: Dockerfile
    container_name: image
    environment:
      - BUCKET_NAME=${BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - AWS_S3_FORCE_PATH_STYLE=true
      - CHOKIDAR_USEPOLLING=true

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8443:80"
    volumes:
      - ./proxy/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
    extra_hosts:
      - host.docker.internal:host-gateway

volumes:
  db_data:
  minio_data:
