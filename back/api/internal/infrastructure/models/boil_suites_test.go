// Code generated by SQLBoiler 4.19.5 (https://github.com/aarondl/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("CollageResults", testCollageResults)
	t.Run("CollagesTemplates", testCollagesTemplates)
	t.Run("DeviceTokens", testDeviceTokens)
	t.Run("Friends", testFriends)
	t.Run("GroupMembers", testGroupMembers)
	t.Run("GroupPartAssignments", testGroupPartAssignments)
	t.Run("Groups", testGroups)
	t.Run("ResultDownloads", testResultDownloads)
	t.Run("TemplateParts", testTemplateParts)
	t.Run("UploadImages", testUploadImages)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResults)
	t.Run("Users", testUsers)
}

func TestDelete(t *testing.T) {
	t.Run("CollageResults", testCollageResultsDelete)
	t.Run("CollagesTemplates", testCollagesTemplatesDelete)
	t.Run("DeviceTokens", testDeviceTokensDelete)
	t.Run("Friends", testFriendsDelete)
	t.Run("GroupMembers", testGroupMembersDelete)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsDelete)
	t.Run("Groups", testGroupsDelete)
	t.Run("ResultDownloads", testResultDownloadsDelete)
	t.Run("TemplateParts", testTemplatePartsDelete)
	t.Run("UploadImages", testUploadImagesDelete)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsDelete)
	t.Run("Users", testUsersDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("CollageResults", testCollageResultsQueryDeleteAll)
	t.Run("CollagesTemplates", testCollagesTemplatesQueryDeleteAll)
	t.Run("DeviceTokens", testDeviceTokensQueryDeleteAll)
	t.Run("Friends", testFriendsQueryDeleteAll)
	t.Run("GroupMembers", testGroupMembersQueryDeleteAll)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsQueryDeleteAll)
	t.Run("Groups", testGroupsQueryDeleteAll)
	t.Run("ResultDownloads", testResultDownloadsQueryDeleteAll)
	t.Run("TemplateParts", testTemplatePartsQueryDeleteAll)
	t.Run("UploadImages", testUploadImagesQueryDeleteAll)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsQueryDeleteAll)
	t.Run("Users", testUsersQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("CollageResults", testCollageResultsSliceDeleteAll)
	t.Run("CollagesTemplates", testCollagesTemplatesSliceDeleteAll)
	t.Run("DeviceTokens", testDeviceTokensSliceDeleteAll)
	t.Run("Friends", testFriendsSliceDeleteAll)
	t.Run("GroupMembers", testGroupMembersSliceDeleteAll)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsSliceDeleteAll)
	t.Run("Groups", testGroupsSliceDeleteAll)
	t.Run("ResultDownloads", testResultDownloadsSliceDeleteAll)
	t.Run("TemplateParts", testTemplatePartsSliceDeleteAll)
	t.Run("UploadImages", testUploadImagesSliceDeleteAll)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsSliceDeleteAll)
	t.Run("Users", testUsersSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("CollageResults", testCollageResultsExists)
	t.Run("CollagesTemplates", testCollagesTemplatesExists)
	t.Run("DeviceTokens", testDeviceTokensExists)
	t.Run("Friends", testFriendsExists)
	t.Run("GroupMembers", testGroupMembersExists)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsExists)
	t.Run("Groups", testGroupsExists)
	t.Run("ResultDownloads", testResultDownloadsExists)
	t.Run("TemplateParts", testTemplatePartsExists)
	t.Run("UploadImages", testUploadImagesExists)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsExists)
	t.Run("Users", testUsersExists)
}

func TestFind(t *testing.T) {
	t.Run("CollageResults", testCollageResultsFind)
	t.Run("CollagesTemplates", testCollagesTemplatesFind)
	t.Run("DeviceTokens", testDeviceTokensFind)
	t.Run("Friends", testFriendsFind)
	t.Run("GroupMembers", testGroupMembersFind)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsFind)
	t.Run("Groups", testGroupsFind)
	t.Run("ResultDownloads", testResultDownloadsFind)
	t.Run("TemplateParts", testTemplatePartsFind)
	t.Run("UploadImages", testUploadImagesFind)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsFind)
	t.Run("Users", testUsersFind)
}

func TestBind(t *testing.T) {
	t.Run("CollageResults", testCollageResultsBind)
	t.Run("CollagesTemplates", testCollagesTemplatesBind)
	t.Run("DeviceTokens", testDeviceTokensBind)
	t.Run("Friends", testFriendsBind)
	t.Run("GroupMembers", testGroupMembersBind)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsBind)
	t.Run("Groups", testGroupsBind)
	t.Run("ResultDownloads", testResultDownloadsBind)
	t.Run("TemplateParts", testTemplatePartsBind)
	t.Run("UploadImages", testUploadImagesBind)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsBind)
	t.Run("Users", testUsersBind)
}

func TestOne(t *testing.T) {
	t.Run("CollageResults", testCollageResultsOne)
	t.Run("CollagesTemplates", testCollagesTemplatesOne)
	t.Run("DeviceTokens", testDeviceTokensOne)
	t.Run("Friends", testFriendsOne)
	t.Run("GroupMembers", testGroupMembersOne)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsOne)
	t.Run("Groups", testGroupsOne)
	t.Run("ResultDownloads", testResultDownloadsOne)
	t.Run("TemplateParts", testTemplatePartsOne)
	t.Run("UploadImages", testUploadImagesOne)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsOne)
	t.Run("Users", testUsersOne)
}

func TestAll(t *testing.T) {
	t.Run("CollageResults", testCollageResultsAll)
	t.Run("CollagesTemplates", testCollagesTemplatesAll)
	t.Run("DeviceTokens", testDeviceTokensAll)
	t.Run("Friends", testFriendsAll)
	t.Run("GroupMembers", testGroupMembersAll)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsAll)
	t.Run("Groups", testGroupsAll)
	t.Run("ResultDownloads", testResultDownloadsAll)
	t.Run("TemplateParts", testTemplatePartsAll)
	t.Run("UploadImages", testUploadImagesAll)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsAll)
	t.Run("Users", testUsersAll)
}

func TestCount(t *testing.T) {
	t.Run("CollageResults", testCollageResultsCount)
	t.Run("CollagesTemplates", testCollagesTemplatesCount)
	t.Run("DeviceTokens", testDeviceTokensCount)
	t.Run("Friends", testFriendsCount)
	t.Run("GroupMembers", testGroupMembersCount)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsCount)
	t.Run("Groups", testGroupsCount)
	t.Run("ResultDownloads", testResultDownloadsCount)
	t.Run("TemplateParts", testTemplatePartsCount)
	t.Run("UploadImages", testUploadImagesCount)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsCount)
	t.Run("Users", testUsersCount)
}

func TestHooks(t *testing.T) {
	t.Run("CollageResults", testCollageResultsHooks)
	t.Run("CollagesTemplates", testCollagesTemplatesHooks)
	t.Run("DeviceTokens", testDeviceTokensHooks)
	t.Run("Friends", testFriendsHooks)
	t.Run("GroupMembers", testGroupMembersHooks)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsHooks)
	t.Run("Groups", testGroupsHooks)
	t.Run("ResultDownloads", testResultDownloadsHooks)
	t.Run("TemplateParts", testTemplatePartsHooks)
	t.Run("UploadImages", testUploadImagesHooks)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsHooks)
	t.Run("Users", testUsersHooks)
}

func TestInsert(t *testing.T) {
	t.Run("CollageResults", testCollageResultsInsert)
	t.Run("CollageResults", testCollageResultsInsertWhitelist)
	t.Run("CollagesTemplates", testCollagesTemplatesInsert)
	t.Run("CollagesTemplates", testCollagesTemplatesInsertWhitelist)
	t.Run("DeviceTokens", testDeviceTokensInsert)
	t.Run("DeviceTokens", testDeviceTokensInsertWhitelist)
	t.Run("Friends", testFriendsInsert)
	t.Run("Friends", testFriendsInsertWhitelist)
	t.Run("GroupMembers", testGroupMembersInsert)
	t.Run("GroupMembers", testGroupMembersInsertWhitelist)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsInsert)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsInsertWhitelist)
	t.Run("Groups", testGroupsInsert)
	t.Run("Groups", testGroupsInsertWhitelist)
	t.Run("ResultDownloads", testResultDownloadsInsert)
	t.Run("ResultDownloads", testResultDownloadsInsertWhitelist)
	t.Run("TemplateParts", testTemplatePartsInsert)
	t.Run("TemplateParts", testTemplatePartsInsertWhitelist)
	t.Run("UploadImages", testUploadImagesInsert)
	t.Run("UploadImages", testUploadImagesInsertWhitelist)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsInsert)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsInsertWhitelist)
	t.Run("Users", testUsersInsert)
	t.Run("Users", testUsersInsertWhitelist)
}

func TestReload(t *testing.T) {
	t.Run("CollageResults", testCollageResultsReload)
	t.Run("CollagesTemplates", testCollagesTemplatesReload)
	t.Run("DeviceTokens", testDeviceTokensReload)
	t.Run("Friends", testFriendsReload)
	t.Run("GroupMembers", testGroupMembersReload)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsReload)
	t.Run("Groups", testGroupsReload)
	t.Run("ResultDownloads", testResultDownloadsReload)
	t.Run("TemplateParts", testTemplatePartsReload)
	t.Run("UploadImages", testUploadImagesReload)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsReload)
	t.Run("Users", testUsersReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("CollageResults", testCollageResultsReloadAll)
	t.Run("CollagesTemplates", testCollagesTemplatesReloadAll)
	t.Run("DeviceTokens", testDeviceTokensReloadAll)
	t.Run("Friends", testFriendsReloadAll)
	t.Run("GroupMembers", testGroupMembersReloadAll)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsReloadAll)
	t.Run("Groups", testGroupsReloadAll)
	t.Run("ResultDownloads", testResultDownloadsReloadAll)
	t.Run("TemplateParts", testTemplatePartsReloadAll)
	t.Run("UploadImages", testUploadImagesReloadAll)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsReloadAll)
	t.Run("Users", testUsersReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("CollageResults", testCollageResultsSelect)
	t.Run("CollagesTemplates", testCollagesTemplatesSelect)
	t.Run("DeviceTokens", testDeviceTokensSelect)
	t.Run("Friends", testFriendsSelect)
	t.Run("GroupMembers", testGroupMembersSelect)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsSelect)
	t.Run("Groups", testGroupsSelect)
	t.Run("ResultDownloads", testResultDownloadsSelect)
	t.Run("TemplateParts", testTemplatePartsSelect)
	t.Run("UploadImages", testUploadImagesSelect)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsSelect)
	t.Run("Users", testUsersSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("CollageResults", testCollageResultsUpdate)
	t.Run("CollagesTemplates", testCollagesTemplatesUpdate)
	t.Run("DeviceTokens", testDeviceTokensUpdate)
	t.Run("Friends", testFriendsUpdate)
	t.Run("GroupMembers", testGroupMembersUpdate)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsUpdate)
	t.Run("Groups", testGroupsUpdate)
	t.Run("ResultDownloads", testResultDownloadsUpdate)
	t.Run("TemplateParts", testTemplatePartsUpdate)
	t.Run("UploadImages", testUploadImagesUpdate)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsUpdate)
	t.Run("Users", testUsersUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("CollageResults", testCollageResultsSliceUpdateAll)
	t.Run("CollagesTemplates", testCollagesTemplatesSliceUpdateAll)
	t.Run("DeviceTokens", testDeviceTokensSliceUpdateAll)
	t.Run("Friends", testFriendsSliceUpdateAll)
	t.Run("GroupMembers", testGroupMembersSliceUpdateAll)
	t.Run("GroupPartAssignments", testGroupPartAssignmentsSliceUpdateAll)
	t.Run("Groups", testGroupsSliceUpdateAll)
	t.Run("ResultDownloads", testResultDownloadsSliceUpdateAll)
	t.Run("TemplateParts", testTemplatePartsSliceUpdateAll)
	t.Run("UploadImages", testUploadImagesSliceUpdateAll)
	t.Run("UploadImagesCollageResults", testUploadImagesCollageResultsSliceUpdateAll)
	t.Run("Users", testUsersSliceUpdateAll)
}
